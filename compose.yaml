# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
      dockerfile: ./build/docker/Dockerfile
    develop:
      watch:
        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
    ports:
      - 8000:8000
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
    env_file:
      - ./local/.env
    profiles:
      - backend
    depends_on:
      - postgres
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: backend-jw
      POSTGRES_PASSWORD: backend-jw
    volumes:
      - ./postgresql-data:/var/lib/postgresql/data
      - ./postgresql-init:/docker-entrypoint-initdb.d
    profiles:
      - backend

networks:
  default:
    # This is the default network for your application.
    # You can add more networks if needed.
    driver: bridge
